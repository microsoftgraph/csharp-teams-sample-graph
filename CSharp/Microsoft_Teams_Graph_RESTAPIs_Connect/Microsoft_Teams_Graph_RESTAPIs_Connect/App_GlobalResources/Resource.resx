<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
    <comment>Link to About page</comment>
  </data>
  <data name="About_Description" xml:space="preserve">
    <value>Your application description page.</value>
    <comment>Description of app for About view</comment>
  </data>
  <data name="App_Name" xml:space="preserve">
    <value>Microsoft Teams Graph Connect Sample for ASP.NET 4.6</value>
    <comment>Full app name for title and copyright</comment>
  </data>
  <data name="App_Name_Short" xml:space="preserve">
    <value>Microsoft Teams Graph Connect C# Sample</value>
    <comment>Short app name for navigation bar and browser tab</comment>
  </data>
  <data name="Error_AuthChallengeNeeded" xml:space="preserve">
    <value>Caller needs to authenticate.</value>
    <comment>Error message when unable to retrieve the access token silently.</comment>
  </data>
  <data name="Error_Introduction" xml:space="preserve">
    <value>An error occurred while processing your request.</value>
    <comment>Generic text for Error view</comment>
  </data>
  <data name="Error_Message" xml:space="preserve">
    <value>Error in</value>
    <comment>Prefix of error message sent to Error view</comment>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
    <comment>Link to Home page</comment>
  </data>
  <data name="No_Results" xml:space="preserve">
    <value>Operation completed, but no results were returned.</value>
    <comment>Message if no results were returned (e.g. an empty collection)</comment>
  </data>
  <data name="Prop_ID" xml:space="preserve">
    <value>ID  :</value>
    <comment>Property display name for Results view</comment>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign in with Microsoft</value>
    <comment>Link to Account.SignIn action</comment>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Sign out</value>
    <comment>Link to Account.SignOut</comment>
  </data>
  <data name="TeamsGraph_Channel_Id_Label" xml:space="preserve">
    <value>Enter Channel Id</value>
    <comment>Label for channel ID input</comment>
  </data>
  <data name="TeamsGraph_CreateChannel_Button" xml:space="preserve">
    <value>Create</value>
    <comment>Button text for 'create channel' section in Graph view</comment>
  </data>
  <data name="TeamsGraph_CreateChannel_Description_Label" xml:space="preserve">
    <value>Enter Channel Description:</value>
    <comment>Label for channel description input</comment>
  </data>
  <data name="TeamsGraph_CreateChannel_Heading" xml:space="preserve">
    <value>Create Channel</value>
    <comment>Heading for 'create channel' section in Graph view</comment>
  </data>
  <data name="TeamsGraph_CreateChannel_Name_Label" xml:space="preserve">
    <value>Enter Channel Name:</value>
    <comment>Label for channel name input</comment>
  </data>
  <data name="TeamsGraph_CreateChannel_Success_Result" xml:space="preserve">
    <value>Success! New channel is created.</value>
    <comment>Success message for 'create channel' section in Graph view</comment>
  </data>
  <data name="TeamsGraph_CreateGroup_Success_Result" xml:space="preserve">
    <value>Success! New group is created.</value>
    <comment>Success message for 'create group' section in Graph view</comment>
  </data>
  <data name="TeamsGraph_CreateGroup_Heading" xml:space="preserve">
    <value>Create Group</value>
    <comment>Heading for 'create Group' section in Graph view</comment>
  </data>
  <data name="TeamsGraph_CreateMember_Heading" xml:space="preserve">
    <value>Add Member</value>
    <comment>Heading for 'Add Member" section in Graph view</comment>
  </data>
  <data name="TeamsGraph_CreateTeam_Heading" xml:space="preserve">
    <value>Add Team to Group</value>
    <comment>Heading for 'create team' section in Graph View</comment>
  </data>
  <data name="TeamsGraph_GetChannels_Button" xml:space="preserve">
    <value>Get</value>
    <comment>Button text for 'get channels' section in Graph view</comment>
  </data>
  <data name="TeamsGraph_GetChannels_Heading" xml:space="preserve">
    <value>Get Channels</value>
    <comment>Heading for 'get channels' section in Graph view</comment>
  </data>
  <data name="TeamsGraph_GetChannels_Results_Label" xml:space="preserve">
    <value>Channels Information</value>
    <comment>Label for 'get channels' result in Graph view</comment>
  </data>
  <data name="TeamsGraph_GetMyTeams_Button" xml:space="preserve">
    <value>Get</value>
    <comment>Button text for 'get my teams' section in Graph view</comment>
  </data>
  <data name="TeamsGraph_GetMyTeams_Heading" xml:space="preserve">
    <value>Get My Teams</value>
    <comment>Heading for 'get my teams' section in Graph view</comment>
  </data>
  <data name="TeamsGraph_GetMyTeams_Results_Label" xml:space="preserve">
    <value>Teams Information</value>
    <comment>Label for 'get my teams' result in Graph view</comment>
  </data>
  <data name="TeamsGraph_PostMessage_Button" xml:space="preserve">
    <value>Post</value>
    <comment>Button text for 'post message' section in Graph view</comment>
  </data>
  <data name="TeamsGraph_PostMessage_Heading" xml:space="preserve">
    <value>Post Message</value>
    <comment>Heading for 'post message' section in Graph view</comment>
  </data>
  <data name="TeamsGraph_PostMessage_Label" xml:space="preserve">
    <value>Type Message</value>
    <comment>Label for message input in 'post message' section in Graph view</comment>
  </data>
  <data name="TeamsGraph_PostMessage_Success_Result" xml:space="preserve">
    <value>Success! Your message is posted.</value>
    <comment>Success message for 'post message' section in Graph view</comment>
  </data>
  <data name="TeamsGraph_PostMessage_Text" xml:space="preserve">
    <value>This message is posted using Teams Graph API.</value>
    <comment>Placeholder partial text for message input in 'post message' section in Graph view</comment>
  </data>
  <data name="TeamsGraph_Team_Id_Label" xml:space="preserve">
    <value>Enter Team Id</value>
    <comment>Label for team ID input</comment>
  </data>
  <data name="TeamsGraph_UpdateTeam_Heading" xml:space="preserve">
    <value>Update Team</value>
    <comment>Heading for 'Update team' section in Graph View</comment>
  </data>
</root>